type Query {
    healthCheck: String
    objects(input: ObjectsInput!): Objects
}

input ObjectsInput {
    pageNumber: Int = 1
    pageSize: Int = 10
    orderBy: SortBy
    filterBy: FilterBy
}

input SortBy {
    sortBy: SortByFields!
    sortOrder: SortOrder!
}

enum SortOrder {
    DESC
    ASC
}
enum SortByFields {
    RANK
}

input FilterBy {
    hasImages: Boolean
    verificationLevel: VerificationLevel
}

enum VerificationLevel {
    UNCHECKED
    POOR
    ADEQUATE
    GOOD
    BEST
}

type Objects {
    data: [ObjectResource!]!
    currentPage: Int!
    itemsPerPage: Int!
    totalItems: Int!
    totalPages: Int!
}

type ObjectResource {
    id: String!
    rank: Int!
}
